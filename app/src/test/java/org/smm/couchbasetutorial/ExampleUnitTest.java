package org.smm.couchbasetutorial;

import android.content.Context;
import android.util.Log;

import com.couchbase.lite.CouchbaseLiteException;
import com.couchbase.lite.Database;
import com.couchbase.lite.DatabaseConfiguration;
import com.couchbase.lite.Document;
import com.couchbase.lite.MutableDocument;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import static org.junit.Assert.*;

/**
 * Example local unit test, which will execute on the development machine (host).
 *
 * @see <a href="http://d.android.com/tools/testing">Testing documentation</a>
 */
public class ExampleUnitTest {

    static Database database;

    @BeforeClass
    public static void initializeDb() {
        try {
            // Get the database (and create it if it doesnâ€™t exist).
            DatabaseConfiguration config = new DatabaseConfiguration(new MainActivity().getApplicationContext());
            database = new Database("fakenewsdb", config);
        } catch (CouchbaseLiteException e) {
            Log.e("BEFORE CLASS", e.getMessage());
        }
    }

    @Test
    public void databaseCreation() {
        assertNotNull(database);
        ArticleModel article1 = new ArticleModel();
        article1.setTitle("NASA Hacked");
        article1.setLink("https://www.fakenews.com/NASA Hacked/");
        article1.setCategory("Breaking news");
        article1.setCreator("El barto");
        article1.setDate("27/10/2019");
        article1.setDescription("This is a description");
        article1.setImage("https://www.fakenews.com/wp-content/nasa-pic-hacker.png");
        article1.setContent("This is encoded content");
        assertNotNull(article1);
        try {

            // Create a new document (i.e. a record) in the database.
            MutableDocument mutableDoc = new MutableDocument()
                    .setString("title", article1.getTitle())
                    .setString("link", article1.getLink())
                    .setString("category", article1.getCategory())
                    .setString("creator", article1.getCreator())
                    .setString("description", article1.getDescription())
                    .setString("date", article1.getDate())
                    .setString("content", article1.getContent());

            // Save it to the database.
            database.save(mutableDoc);

            // Update a document.
            mutableDoc = database.getDocument(mutableDoc.getId()).toMutable();
            mutableDoc.setString("image", article1.getImage());
            database.save(mutableDoc);
            Document document = database.getDocument(mutableDoc.getId());

            // Log the document ID (generated by the database) and properties
            Log.i("DATABASE CREATION", "Document ID :: " + document.getId());
            Log.i("DATABASE CREATION", "Learning " + document.getString("language"));

        } catch (CouchbaseLiteException e) {
            Log.e("DATABASE CREATION", e.getMessage());
        }

    }

    @AfterClass
    public static void deleteDb() {
        try {
            database.delete();
        } catch (CouchbaseLiteException e) {
            Log.e("AFTER CLASS", e.getMessage());
        }
    }
}